---
import Layout from '../../layouts/Layout.astro';
import { getEntryBySlug, getCollection, type CollectionEntry } from 'astro:content';
import { css, cx } from '../../../styled-system/css';

// 動的ルートのパスを生成
export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post: CollectionEntry<'posts'>) => ({
    params: { slug: post.slug }
  }));
}

// 型を明示
const { slug } = Astro.params;
const post = await getEntryBySlug('posts', slug) as CollectionEntry<'posts'>;

if (!post) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await post.render();
---

<Layout>
  <article class={css({
    "maxWidth": "800px",
    "margin": "2rem auto",
    "padding": "2rem",
    "background": "white",
    "borderRadius": "8px",
    "boxShadow": "0 4px 6px rgba(0, 0, 0, 0.1)",
  })}>
    <h1 class={css({
      "fontFamily": '"Zen_Kaku_Gothic_New", sans-serif',
      "fontSize": "2.2rem",
      "color": "#0077cc",
      "marginBottom": "1rem",
      "textAlign": "center",
    })}>{post.data.title}</h1>
    <p class={css({
      "fontSize": "0.9rem",
      "textAlign": "center",
      "color": "#777",
      "marginBottom": "1rem",
    })}>
      📅 {post.data.pubDate} | 📝 {post.data.author}
    </p>
    <div class={css({
      "textAlign": "center",
      "marginBottom": "1rem",
      "display": "flex",
      "gap": "0.5rem",
      "justifyContent": "center",
      "flexWrap": "wrap",
    })}>
      {post.data.tags.map((tag: string) => (
        <span class={css({
          "background": "#e0e0f8",
          "color": "#555",
          "borderRadius": "12px",
          "padding": "0.2rem 0.6rem",
          "fontSize": "0.8rem",
        })}>#{tag}</span>
      ))}
    </div>
      <Content class="blog"/>
  </article>
</Layout>
